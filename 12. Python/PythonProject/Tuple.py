# 튜플 기본
t = (10, 20, 30)
print(t[0])   # 10
print(t[-1])  # 30

# 튜플 생성 방법
# 기본 생성
a = (1, 2, 3)

# 소괄호 생략 가능
b = 4, 5, 6

# 요소가 하나일 때는 반드시 콤마 필요
c = (7,)
d = 7,

# 빈 튜플
empty = ()
print(a, b, c, d, empty)

# 튜플과 리스트 차이
lst = [1, 2, 3]
tpl = (1, 2, 3)

lst[0] = 100    # 가능
# tpl[0] = 100  # 오류 (TypeError)

# 패킹 & 언패킹
# 패킹: 여러 값을 하나의 튜플로 묶음
t = 1, 2, 3

# 언패킹: 튜플을 여러 변수에 나눠 담음
a, b, c = t
print(a, b, c)   # 1 2 3

# *을 이용한 언패킹
nums = (1, 2, 3, 4, 5)
x, y, *rest = nums
print(x, y, rest)  # 1 2 [3,4,5]

# 퓨틀과 함수 반환값
def calc(a, b):
    return a+b, a*b

result = calc(3, 4)
print(result)        # (7, 12)

s, m = calc(3, 4)    # 언패킹
print(s, m)          # 7 12

# 튜플 활용
#데이터 변경을 막아 안전하게 사용 가능
#딕셔너리의 키, 집합의 원소로 사용 가능 (리스트는 불가능)
d = {(1,2): "point A", (3,4): "point B"}
print(d[(1,2)])   # point A

# 튜플 (10, 20, 30, 40, 50)에서
# - 첫 번째 값과 세 번째 값을 출력하시오.

t1 = (1, 2, 3,4,5)
print(t1[0])
print(t1[2])

#튜플 (1, 2, 3)과 (4, 5)를 이어 붙여 출력하시오.
t2 = (1, 2, 3)
t3 = (4,5)
t4 = t2 + t3
print(t4)

# 튜플 (100, 200, 300, 400, 500)에서
# - 인덱스 1~3 범위를 슬라이싱하여 출력하시오.

t5 = (100,200,300,400,500)
print(t5[1:4])